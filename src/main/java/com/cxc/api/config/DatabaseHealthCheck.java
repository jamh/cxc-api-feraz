package com.cxc.api.config;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;

import javax.sql.DataSource;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;

@Component
public class DatabaseHealthCheck implements CommandLineRunner {

    private static final Logger logger = LoggerFactory.getLogger(DatabaseHealthCheck.class);

    @Autowired
    private DataSource dataSource;

    @Override
    public void run(String... args) throws Exception {
        logger.info("üîç Verificando conexi√≥n a Oracle...");
        
        try (Connection connection = dataSource.getConnection()) {
            logger.info("‚úÖ Conexi√≥n a Oracle establecida exitosamente");
            
            // Verificar informaci√≥n de la conexi√≥n
            logger.info("üìä Informaci√≥n de la conexi√≥n:");
            logger.info("   - URL: {}", connection.getMetaData().getURL());
            logger.info("   - Usuario: {}", connection.getMetaData().getUserName());
            logger.info("   - Base de datos: {}", connection.getCatalog());
            logger.info("   - Driver: {}", connection.getMetaData().getDriverName());
            logger.info("   - Versi√≥n: {}", connection.getMetaData().getDatabaseProductVersion());
            
            // Probar consulta simple
            try (Statement stmt = connection.createStatement();
                 ResultSet rs = stmt.executeQuery("SELECT SYSDATE FROM DUAL")) {
                
                if (rs.next()) {
                    String currentDate = rs.getString(1);
                    logger.info("üìÖ Fecha actual del servidor: {}", currentDate);
                }
            }
            
            // Verificar acceso a la tabla R_CLIENTES (solo lectura para evitar triggers)
            try (Statement stmt = connection.createStatement();
                 ResultSet rs = stmt.executeQuery("SELECT COUNT(*) FROM R_CLIENTES WHERE ROWNUM <= 1")) {
                
                if (rs.next()) {
                    int totalClientes = rs.getInt(1);
                    logger.info("üìã Acceso a tabla R_CLIENTES verificado (muestra: {} registros)", totalClientes);
                }
            }
            
            logger.info("üéâ Verificaci√≥n de base de datos completada exitosamente");
            
        } catch (Exception e) {
            logger.error("‚ùå Error al conectar con Oracle: {}", e.getMessage());
            logger.error("Detalles del error:", e);
            // No lanzar excepci√≥n para evitar que la aplicaci√≥n falle
            logger.warn("‚ö†Ô∏è La aplicaci√≥n continuar√° sin verificaci√≥n de base de datos");
        }
    }
} 